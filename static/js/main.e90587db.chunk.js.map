{"version":3,"sources":["components/RoleList.js","components/RoleCreate.js","components/RoleEdit.js","components/UserList.js","components/UserCreate.js","components/UserEdit.js","App.js","reportWebVitals.js","index.js"],"names":["PostList","props","List","Datagrid","TextField","source","DateField","EditButton","basePath","DeleteButton","PostCreate","Create","title","SimpleForm","TextInput","multiline","DateInput","label","PostEdit","Edit","disabled","UserList","rowClick","EmailField","useStyles","makeStyles","user_id","width","display","marginLeft","password","email","first_name","last_name","phone_num","checkboxDesign1","checkboxDesign2","Separator","Box","pt","UserCreate","classes","style","color","fontWeight","required","autoFocus","formClassName","fullWidth","variant","PasswordInput","type","CheckboxGroupInput","choices","id","name","UserEdit","App","Admin","dataProvider","restProvider","Resource","list","create","edit","RoleList","RoleCreate","RoleEdit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e90587db.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  DateField,\r\n  EditButton,\r\n  DeleteButton,\r\n} from 'react-admin'\r\n\r\nconst PostList = (props) => {\r\n  return (\r\n    <List {...props}>\r\n      <Datagrid>\r\n        <TextField source='id' />\r\n        <TextField source='title' />\r\n        <DateField source='publishedAt' />\r\n        <EditButton basePath='/posts' />\r\n        <DeleteButton basePath='/posts' />\r\n      </Datagrid>\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default PostList\r\n","import React from 'react'\r\nimport { Create, SimpleForm, TextInput, DateInput } from 'react-admin'\r\n\r\nconst PostCreate = (props) => {\r\n  return (\r\n    <Create title='Create a Post' {...props}>\r\n      <SimpleForm>\r\n        <TextInput source='title' />\r\n        <TextInput multiline source='body' />\r\n        <DateInput label='Published' source='publishedAt' />\r\n      </SimpleForm>\r\n    </Create>\r\n  )\r\n}\r\n\r\nexport default PostCreate\r\n","import React from 'react'\r\nimport { Edit, SimpleForm, TextInput, DateInput } from 'react-admin'\r\n\r\nconst PostEdit = (props) => {\r\n  return (\r\n    <Edit title='Edit Post' {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source='id' />\r\n        <TextInput source='title' />\r\n        <TextInput multiline source='body' />\r\n        <DateInput label='Published' source='publishedAt' />\r\n      </SimpleForm>\r\n    </Edit>\r\n  )\r\n}\r\n\r\nexport default PostEdit\r\n","import React from 'react'\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EmailField,\r\n  EditButton,\r\n  DeleteButton,\r\n} from 'react-admin'\r\n\r\nconst UserList = (props) => {\r\n  return (\r\n    <List {...props}>\r\n      <Datagrid rowClick='edit' >\r\n        <TextField source='user_id' label='User Name' />\r\n        <TextField source='first_name' />\r\n        <EmailField source='email' />\r\n        <TextField source='phone_num'/>\r\n      </Datagrid>\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import {Box} from '@material-ui/core';\r\nimport React from 'react'\r\nimport { Create, SimpleForm, TextInput, PasswordInput,CheckboxGroupInput } from 'react-admin'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Styles } from '@material-ui/styles/withStyles';\r\n\r\n\r\nexport const styles: Styles<Theme, any> = {\r\n  user_id: {width: 300 , display:'inline-block',marginLeft:150},\r\n  password: { width: 300,display:'inline-block',marginLeft:150},\r\n  email: { width: 300,display:'inline-block',marginLeft:150},\r\n  first_name: { width: 300,display:'inline-block',marginLeft:150},\r\n  last_name: { width: 300,display:'inline-block',marginLeft:150},\r\n  phone_num: { width: 300,display:'inline-block',marginLeft:150},\r\n  checkboxDesign1: { width: 300,display:'inline-block',marginLeft:150},\r\n  checkboxDesign2: { width: 300,display:'inline-block',marginLeft:150}\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst UserCreate = (props) => {\r\n  const classes=useStyles(props);\r\n  return (\r\n    <Create title='Create a User' {...props}> \r\n      <SimpleForm>\r\n        <div style={{marginLeft:150}}>\r\n          <h2 style={{color:\"blue\"}}>Add New User</h2>\r\n          <h4 style={{color:\"blue\", fontWeight:\"300\"}}>User Display Information</h4>\r\n        </div>\r\n        <TextInput \r\n          source=\"user_id\" \r\n          label=\"User Name\" \r\n          required \r\n          autoFocus\r\n          formClassName={classes.user_id}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <PasswordInput \r\n          source=\"password\" \r\n          label=\"Password\" \r\n          required \r\n          formClassName={classes.password}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <TextInput \r\n          source=\"first_name\" \r\n          label=\"First Name\" \r\n          required \r\n          formClassName={classes.first_name}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <TextInput \r\n          source=\"last_name\" \r\n          label=\"Last Name\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          formClassName={classes.last_name}\r\n        />\r\n        <TextInput \r\n          type=\"email\"\r\n          source=\"email\" \r\n          label=\"Email\" \r\n          formClassName={classes.email}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <TextInput \r\n          source=\"phone_num\" \r\n          label=\"Phone Number\" \r\n          fullWidth\r\n          formClassName={classes.phone_num}\r\n          variant=\"outlined\" \r\n        />\r\n        <Separator />\r\n          <h4 style={{color:\"blue\", fontWeight:\"300\" , marginLeft:150}}>Permissions for this User</h4>\r\n          <div formClassName={classes.checkboxDesign1}>\r\n          <CheckboxGroupInput source=\"permission\" label=\"Permission\" choices={[\r\n            { id: 'sub_cat', name: 'Add a sub category' },\r\n            { id: 'main_cat', name: 'Add a main category' },\r\n          ]} />\r\n          </div>\r\n          <div formClassName={classes.checkboxDesign2}>\r\n          <CheckboxGroupInput source=\"associated\" label=\"Associated Views\" required choices={[\r\n            { id: 'skill_master', name: 'Skill Master' },\r\n            { id: 'learner', name: 'Learner' },\r\n            { id: 'administrator', name: 'Administrator' },\r\n          ]} />\r\n        </div>\r\n      </SimpleForm>\r\n    </Create>\r\n  )\r\n}\r\n\r\nconst Separator = () => <Box pt=\"2em\" />;\r\n\r\nexport default UserCreate\r\n","import { blue } from '@material-ui/core/colors'\r\nimport {Box} from '@material-ui/core';\r\nimport React from 'react'\r\nimport { AutocompleteArrayInput, Edit, ListButton, SimpleForm, TextInput, PasswordInput,CheckboxGroupInput } from 'react-admin'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Styles } from '@material-ui/styles/withStyles';\r\nexport const styles: Styles<Theme, any> = {\r\n  user_id: {width: 300 , display:'inline-block',marginLeft:150},\r\n  password: { width: 300,display:'inline-block',marginLeft:150},\r\n  email: { width: 300,display:'inline-block',marginLeft:150},\r\n  first_name: { width: 300,display:'inline-block',marginLeft:150},\r\n  last_name: { width: 300,display:'inline-block',marginLeft:150},\r\n  phone_num: { width: 300,display:'inline-block',marginLeft:150},\r\n  checkboxDesign1: { width: 300,display:'inline-block',marginLeft:150},\r\n  checkboxDesign2: { width: 300,display:'inline-block',marginLeft:150}\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst UserEdit = (props) => {\r\n  const classes=useStyles(props);\r\n  return (\r\n    <Edit title='Create a User' {...props}> \r\n      <SimpleForm>\r\n        <div style={{marginLeft:150}}>\r\n          <h2 style={{color:\"blue\"}}>Add New User</h2>\r\n          <h4 style={{color:\"blue\", fontWeight:\"300\"}}>User Display Information</h4>\r\n        </div>\r\n        <TextInput \r\n          source=\"user_id\" \r\n          label=\"User Name\" \r\n          required \r\n          autoFocus\r\n          formClassName={classes.user_id}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <PasswordInput \r\n          source=\"password\" \r\n          label=\"Password\" \r\n          required \r\n          formClassName={classes.password}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <TextInput \r\n          source=\"first_name\" \r\n          label=\"First Name\" \r\n          required \r\n          formClassName={classes.first_name}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <TextInput \r\n          source=\"last_name\" \r\n          label=\"Last Name\" \r\n          variant=\"outlined\" \r\n          fullWidth\r\n          formClassName={classes.last_name}\r\n        />\r\n        <TextInput \r\n          type=\"email\"\r\n          source=\"email\" \r\n          label=\"Email\" \r\n          formClassName={classes.email}\r\n          fullWidth\r\n          variant=\"outlined\" \r\n        />\r\n        <TextInput \r\n          source=\"phone_num\" \r\n          label=\"Phone Number\" \r\n          fullWidth\r\n          formClassName={classes.phone_num}\r\n          variant=\"outlined\" \r\n        />\r\n        <Separator />\r\n          <h4 style={{color:\"blue\", fontWeight:\"300\" , marginLeft:150}}>Permissions for this User</h4>\r\n          <div formClassName={classes.checkboxDesign1}>\r\n          <CheckboxGroupInput source=\"permission\" label=\"Permission\" choices={[\r\n            { id: 'sub_cat', name: 'Add a sub category' },\r\n            { id: 'main_cat', name: 'Add a main category' },\r\n          ]} />\r\n          </div>\r\n          <div formClassName={classes.checkboxDesign2}>\r\n          <CheckboxGroupInput source=\"associated\" label=\"Associated Views\" required choices={[\r\n            { id: 'skill_master', name: 'Skill Master' },\r\n            { id: 'learner', name: 'Learner' },\r\n            { id: 'administrator', name: 'Administrator' },\r\n          ]} />\r\n        </div>\r\n      </SimpleForm>\r\n    </Edit>\r\n  )\r\n}\r\n\r\nconst Separator = () => <Box pt=\"2em\" />;\r\n\r\nexport default UserEdit;\r\n","import React from 'react'\nimport { Admin, Resource, fetchUtils } from 'react-admin'\nimport restProvider from 'ra-data-simple-rest'\nimport RoleList from './components/RoleList'\nimport RoleCreate from './components/RoleCreate'\nimport RoleEdit from './components/RoleEdit'\nimport UserList from './components/UserList'\nimport UserCreate from './components/UserCreate'\nimport UserEdit from './components/UserEdit'\n\nfunction App() {\n  return (\n    <Admin dataProvider={restProvider('https://kim-admin-db.herokuapp.com')}>\n      <Resource\n        name='users'\n        list={UserList}\n        create={UserCreate}\n        edit={UserEdit}\n      />\n      <Resource\n        name='role'\n        list={RoleList}\n        create={RoleCreate}\n        edit={RoleEdit}\n      />\n    </Admin>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}